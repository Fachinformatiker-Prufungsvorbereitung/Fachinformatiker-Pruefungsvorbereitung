apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fi-pv-ingress
  namespace: {{ .Values.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: default-redirectscheme@kubernetescrd
spec:
  tls:
    - hosts:
        - "{{ .Values.domain }}"
        - "www.{{ .Values.domain }}"
      secretName: fi-pv-cert
  rules:
    - host: "{{ .Values.domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fi-pv-service
                port:
                  number: 80
    - host: www.{{ .Values.domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fi-pv-service
                port:
                  number: 80

---
# Needed because of HTTP to HTTPS redirecting
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fi-pv-ingress-http
  namespace: {{ .Values.namespace }}
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: default-redirectscheme@kubernetescrd
spec:
  rules:
    - host: "{{ .Values.domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fi-pv-service
                port:
                  number: 80
    - host: www.{{ .Values.domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fi-pv-service
                port:
                  number: 80

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirectscheme
  namespace: {{ .Values.namespace }}
spec:
  redirectRegex:
    regex: '^https?://(?:www\.)?(.+)'
    replacement: "https://${1}"
    permanent: true

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirectschemefipv
  namespace: {{ .Values.namespace }}
spec:
  redirectRegex:
    regex: '.*'
    replacement: "https://{{ .Values.domain }}"
    permanent: true



{{- if .Values.production }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fi-pv-redirection-ingress
  namespace: {{ .Values.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: default-redirectschemefipv@kubernetescrd
spec:
  tls:
    - hosts:
        - "xn--fachinformatiker-prfungsvorbereitung-w0d.de"
        - "fi.lna-dev.net"
      secretName: fi-pv-cert-fipv
  rules:
    - host: xn--fachinformatiker-prfungsvorbereitung-w0d.de
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fi-pv-service
                port:
                  number: 80
    - host: fi.lna-dev.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fi-pv-service
                port:
                  number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fi-pv-redirection-ingress-http
  namespace: {{ .Values.namespace }}
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: default-redirectschemefipv@kubernetescrd
spec:
  rules:
    - host: xn--fachinformatiker-prfungsvorbereitung-w0d.de
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fi-pv-service
                port:
                  number: 80
    - host: fi.lna-dev.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fi-pv-service
                port:
                  number: 80

{{- end }}